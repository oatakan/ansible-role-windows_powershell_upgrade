---

- name: download hotfix file
  raw: '(New-Object -TypeName System.Net.WebClient).DownloadFile("{{ hotfix_download_url }}", "{{ hotfix_download_location }}\{{ hotfix_filename }}")'
  changed_when: False
  check_mode: no
  register: download_hotfix
  until: download_hotfix is success
  delay: 3
  retries: 5

- name: unzip if needed
  raw: |
    $tmp_dir = "{{ hotfix_download_location }}"
    $zip_file = "{{ hotfix_download_location }}\{{ hotfix_filename }}"

    try {
        Add-Type -AssemblyName System.IO.Compression.FileSystem > $null
        $legacy = $false
    } catch {
        $legacy = $true
    }

    if ($legacy) {
        $shell = New-Object -ComObject Shell.Application
        $zip_src = $shell.NameSpace($zip_file)
        $zip_dest = $shell.NameSpace($tmp_dir)
        $zip_dest.CopyHere($zip_src.Items(), 1044)
    } else {
        [System.IO.Compression.ZipFile]::ExtractToDirectory($zip_file, $tmp_dir)
    }
  changed_when: False
  check_mode: no
  when: hotfix_filename | regex_search("^.*\.zip$", ignorecase=True)

- name: delete scheduled task if it exists (hotfix)
  raw: 'SCHTASKS /Delete /TN hotfix_install /f'
  args:
    executable: cmd.exe
  changed_when: False
  check_mode: no
  ignore_errors: yes

- name: create a scheduled task to install hotfix
  raw: SCHTASKS /Create /SC MONTHLY /MO first /D SUN /TN hotfix_install /TR "{{ hotfix_download_location }}\{{ hotfix_file }} /quiet /restart"
  args:
    executable: cmd.exe
  changed_when: False
  check_mode: no

- name: run scheduled task (hotfix)
  raw: 'SCHTASKS /Run /TN hotfix_install'
  args:
    executable: cmd.exe
  changed_when: False
  check_mode: no

- name: pausing for system to reboot after hotfix
  pause:
    seconds: "{{ hotfix_pause_seconds | default(60) }}"

- name: delete scheduled task (hotfix)
  raw: 'SCHTASKS /Delete /TN hotfix_install /f'
  args:
    executable: cmd.exe
  changed_when: False
  check_mode: no
  ignore_errors: yes

- name: remove hotfix file
  raw: 'Remove-Item -Path {{ hotfix_download_location }}\{{ hotfix_file }} -Force'
  changed_when: False
  check_mode: no
  ignore_errors: yes

- name: remove hotfix zip file
  raw: 'Remove-Item -Path {{ hotfix_download_location }}\{{ hotfix_filename }} -Force'
  changed_when: False
  check_mode: no
  ignore_errors: yes
  when: hotfix_file != hotfix_filename